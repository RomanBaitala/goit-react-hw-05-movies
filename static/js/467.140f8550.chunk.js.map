{"version":3,"file":"static/js/467.140f8550.chunk.js","mappings":"wRAGMA,EAAU,mCAGVC,EAAe,QAIrBC,EAAAA,EAAAA,SAAAA,QARiB,gCASjB,IAAMC,EAAY,SAAAC,GAAI,OAAIF,EAAAA,EAAAA,IAAUE,GAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,IAAN,GAA1B,EAETC,EAAqB,kBAChCL,EAAU,GAAD,OAVW,gBAUX,oBAA6BH,GADN,EAGrBS,EAAqB,SAAC,GAAD,QAAGC,MAAAA,OAAH,MAAW,WAAX,MAAuBC,KAAAA,OAAvB,MAA8B,EAA9B,SAChCR,EAAU,GAAD,OAZQ,eAYR,oBAA0BH,EAA1B,kBAA2CU,EAA3C,YAAoDC,GAD7B,EAGrBC,EAAmB,SAAAC,GAAO,OACrCV,EAAU,GAAD,OAAIF,EAAJ,YAAoBY,EAApB,oBAAuCb,GADX,EAG1Bc,EAAgB,SAAAD,GAAO,OAClCV,EAAU,GAAD,OACJF,EADI,YACYY,EADZ,YAhBU,UAgBV,oBAC+Cb,IACtDK,MAAK,SAAAC,GAAC,OAAIA,EAAES,KAAKC,MAAM,EAAG,GAApB,GAH0B,EAKvBC,EAAmB,SAAAJ,GAAO,OACrCV,EAAU,GAAD,OACJF,EADI,YACYY,EADZ,YApBU,UAoBV,oBAC+Cb,IACtDK,MAAK,SAAAC,GAAC,OAAIA,EAAEY,QAAQF,MAAM,EAAG,GAAvB,GAH6B,C,8ECJvC,UAnBiB,WACf,OAAgCG,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAQA,OANAC,SAASC,MAAQ,mBAEjBC,EAAAA,EAAAA,YAAU,YACRhB,EAAAA,EAAAA,MAAqBH,KAAKgB,EAC3B,GAAE,KAGO,OAARD,QAAQ,IAARA,OAAA,EAAAA,EAAUK,iBACR,SAAC,UAAD,CACEL,SAAUA,EACVM,MAAO,CAAEC,KAAM,IAAKC,QAAS,YAIpC,C,uGClBYC,EAAkBC,EAAAA,GAAAA,GAAH,iHAOfC,EAAkBD,EAAAA,GAAAA,GAAH,+IASfE,GAAkBF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,+R,SCG5B,EAhBkB,SAAC,GAAyB,IAAvBV,EAAsB,EAAtBA,SAAUM,EAAY,EAAZA,MAC7B,OACE,SAACG,EAAD,UACGT,EAASF,QAAQgB,KAAI,SAAAC,GAAS,IAAD,EAC5B,OACE,SAACJ,EAAD,WACE,SAACC,EAAD,CAAiBI,GAAE,UAAKV,EAAME,SAAX,OAAqBO,EAAKE,IAAMX,MAAOA,EAA1D,mBACGS,EAAKZ,aADR,QACiBY,EAAKG,kBAFFH,EAAKE,GAM9B,KAGN,C","sources":["api/fethcFilms.js","components/Home/home.jsx","components/MovieList/movieList.styled.jsx","components/MovieList/movieList.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '964aa706dab4c3295b22f686e0c720cc';\nconst PATH_TRENDING = 'movie/popular';\nconst PATH_MOVIE = 'search/movie';\nconst PATH_DETAILS = 'movie';\nconst PATH_CREDITS = 'credits';\nconst PATH_REVIEWS = 'reviews';\n\naxios.defaults.baseURL = BASE_URL;\nconst fetchPath = path => axios.get(path).then(r => r.data);\n\nexport const fetchTrendingFilms = () =>\n  fetchPath(`${PATH_TRENDING}?api_key=${API_KEY}`);\n\nexport const fetchSearchedFilms = ({ query = 'trending', page = 1 }) =>\n  fetchPath(`${PATH_MOVIE}?api_key=${API_KEY}&query=${query}&${page}`);\n\nexport const fetchFilmDetails = movieId =>\n  fetchPath(`${PATH_DETAILS}/${movieId}?api_key=${API_KEY}`);\n\nexport const fetchFilmCast = movieId =>\n  fetchPath(\n    `${PATH_DETAILS}/${movieId}/${PATH_CREDITS}?api_key=${API_KEY}`\n  ).then(r => r.cast.slice(0, 10));\n\nexport const fetchFilmReviews = movieId =>\n  fetchPath(\n    `${PATH_DETAILS}/${movieId}/${PATH_REVIEWS}?api_key=${API_KEY}`\n  ).then(r => r.results.slice(0, 10));\n","import { useEffect, useState } from 'react';\nimport { fetchTrendingFilms } from 'api/fethcFilms';\nimport MovieList from 'components/MovieList/movieList';\n\nconst Trending = () => {\n  const [filmList, setFilmList] = useState([]);\n\n  document.title = 'Trending movies';\n\n  useEffect(() => {\n    fetchTrendingFilms().then(setFilmList);\n  }, []);\n\n  return (\n    filmList?.total_results && (\n      <MovieList\n        filmList={filmList}\n        state={{ from: '/', addPath: 'movies/' }}\n      />\n    )\n  );\n};\n\nexport default Trending;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledMovieList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: no-wrap;\n  list-style: none;\n`;\n\nexport const StyledMovieItem = styled.li`\n  padding: 0;\n  word-wrap: none;\n  padding: 0;\n  display: flex;\n  justify-content: start;\n  align-items: center;\n`;\n\nexport const StyledMovieLink = styled(Link)`\n  margin: 10px;\n  padding: 10px;\n  width: 350px;\n  font-size: 14px;\n  font-weight: normal;\n  text-decoration: none;\n  color: darkblue;\n  box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.25);\n  &.active {\n    text-decoration: underline;\n    color: darkred;\n  }\n`;\n","import {\n  StyledMovieItem,\n  StyledMovieList,\n  StyledMovieLink,\n} from './movieList.styled';\n\nconst MovieList = ({ filmList, state }) => {\n  return (\n    <StyledMovieList>\n      {filmList.results.map(film => {\n        return (\n          <StyledMovieItem key={film.id}>\n            <StyledMovieLink to={`${state.addPath}${film.id}`} state={state}>\n              {film.title ?? film.original_title}\n            </StyledMovieLink>\n          </StyledMovieItem>\n        );\n      })}\n    </StyledMovieList>\n  );\n};\n\nexport default MovieList;\n"],"names":["API_KEY","PATH_DETAILS","axios","fetchPath","path","then","r","data","fetchTrendingFilms","fetchSearchedFilms","query","page","fetchFilmDetails","movieId","fetchFilmCast","cast","slice","fetchFilmReviews","results","useState","filmList","setFilmList","document","title","useEffect","total_results","state","from","addPath","StyledMovieList","styled","StyledMovieItem","StyledMovieLink","Link","map","film","to","id","original_title"],"sourceRoot":""}