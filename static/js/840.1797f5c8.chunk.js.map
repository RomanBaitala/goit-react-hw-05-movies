{"version":3,"file":"static/js/840.1797f5c8.chunk.js","mappings":"oRAGMA,EAAU,mCAGVC,EAAe,QAIrBC,EAAAA,EAAAA,SAAAA,QARiB,gCASjB,IAAMC,EAAY,SAAAC,GAAI,OAAIF,EAAAA,EAAAA,IAAUE,GAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,IAAN,GAA1B,EAETC,EAAqB,kBAChCL,EAAU,GAAD,OAVW,gBAUX,oBAA6BH,GADN,EAGrBS,EAAqB,SAAC,GAAD,QAAGC,MAAAA,OAAH,MAAW,WAAX,MAAuBC,KAAAA,OAAvB,MAA8B,EAA9B,SAChCR,EAAU,GAAD,OAZQ,eAYR,oBAA0BH,EAA1B,kBAA2CU,EAA3C,YAAoDC,GAD7B,EAGrBC,EAAmB,SAAAC,GAAO,OACrCV,EAAU,GAAD,OAAIF,EAAJ,YAAoBY,EAApB,oBAAuCb,GADX,EAG1Bc,EAAgB,SAAAD,GAAO,OAClCV,EAAU,GAAD,OACJF,EADI,YACYY,EADZ,YAhBU,UAgBV,oBAC+Cb,IACtDK,MAAK,SAAAC,GAAC,OAAIA,EAAES,KAAKC,MAAM,EAAG,GAApB,GAH0B,EAKvBC,EAAmB,SAAAJ,GAAO,OACrCV,EAAU,GAAD,OACJF,EADI,YACYY,EADZ,YApBU,UAoBV,oBAC+Cb,IACtDK,MAAK,SAAAC,GAAC,OAAIA,EAAEY,QAAQF,MAAM,EAAG,GAAvB,GAH6B,C,qICzB1BG,EAAaC,EAAAA,GAAAA,GAAH,0EAMVC,EAAaD,EAAAA,GAAAA,GAAH,uJAQVE,EAASF,EAAAA,GAAAA,KAAH,8CAING,EAAUH,EAAAA,GAAAA,KAAH,2F,SCWpB,EA1BgB,WACd,IAAMI,GAASC,EAAAA,EAAAA,MACTZ,EAAUa,SAASF,EAAOX,SAChC,GAA8Bc,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRb,EAAAA,EAAAA,IAAiBJ,GAASR,KAAKwB,EAChC,GAAE,CAAChB,KAGF,SAACM,EAAD,UACGS,GAAWA,EAAQG,OAAS,EAC3BH,EAAQI,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,UAACd,EAAD,YACE,SAACC,EAAD,UAASY,IADX,MAC6B,SAACX,EAAD,UAAUY,MADtBF,EAIpB,KAED,SAACZ,EAAD,iCAIP,C","sources":["api/fethcFilms.js","components/Reviews/reviews.styled.jsx","components/Reviews/reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '964aa706dab4c3295b22f686e0c720cc';\nconst PATH_TRENDING = 'movie/popular';\nconst PATH_MOVIE = 'search/movie';\nconst PATH_DETAILS = 'movie';\nconst PATH_CREDITS = 'credits';\nconst PATH_REVIEWS = 'reviews';\n\naxios.defaults.baseURL = BASE_URL;\nconst fetchPath = path => axios.get(path).then(r => r.data);\n\nexport const fetchTrendingFilms = () =>\n  fetchPath(`${PATH_TRENDING}?api_key=${API_KEY}`);\n\nexport const fetchSearchedFilms = ({ query = 'trending', page = 1 }) =>\n  fetchPath(`${PATH_MOVIE}?api_key=${API_KEY}&query=${query}&${page}`);\n\nexport const fetchFilmDetails = movieId =>\n  fetchPath(`${PATH_DETAILS}/${movieId}?api_key=${API_KEY}`);\n\nexport const fetchFilmCast = movieId =>\n  fetchPath(\n    `${PATH_DETAILS}/${movieId}/${PATH_CREDITS}?api_key=${API_KEY}`\n  ).then(r => r.cast.slice(0, 10));\n\nexport const fetchFilmReviews = movieId =>\n  fetchPath(\n    `${PATH_DETAILS}/${movieId}/${PATH_REVIEWS}?api_key=${API_KEY}`\n  ).then(r => r.results.slice(0, 10));\n","import styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const ReviewItem = styled.li`\n  padding: 10px;\n  margin: 10px;\n  font-size: 14px;\n  font-weight: normal;\n  box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.25);\n`;\n\nexport const Author = styled.span`\n  font-weight: bold;\n`;\n\nexport const Comment = styled.span`\n  margin: 0 0 0 10px;\n  font-size: 14px;\n  font-weight: normal;\n`;\n","import { fetchFilmReviews } from 'api/fethcFilms';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewList, Author, Comment, ReviewItem } from './reviews.styled';\n\nconst Reviews = () => {\n  const params = useParams();\n  const movieId = parseInt(params.movieId);\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchFilmReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <ReviewList>\n      {reviews && reviews.length > 0 ? (\n        reviews.map(({ id, author, content }) => {\n          return (\n            <ReviewItem key={id}>\n              <Author>{author}</Author>: <Comment>{content}</Comment>\n            </ReviewItem>\n          );\n        })\n      ) : (\n        <ReviewItem>No reviews yet...</ReviewItem>\n      )}\n    </ReviewList>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","PATH_DETAILS","axios","fetchPath","path","then","r","data","fetchTrendingFilms","fetchSearchedFilms","query","page","fetchFilmDetails","movieId","fetchFilmCast","cast","slice","fetchFilmReviews","results","ReviewList","styled","ReviewItem","Author","Comment","params","useParams","parseInt","useState","reviews","setReviews","useEffect","length","map","id","author","content"],"sourceRoot":""}