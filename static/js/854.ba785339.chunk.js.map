{"version":3,"file":"static/js/854.ba785339.chunk.js","mappings":"oRAGMA,EAAU,mCAGVC,EAAe,QAIrBC,EAAAA,EAAAA,SAAAA,QARiB,gCASjB,IAAMC,EAAY,SAAAC,GAAI,OAAIF,EAAAA,EAAAA,IAAUE,GAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,IAAN,GAA1B,EAETC,EAAqB,kBAChCL,EAAU,GAAD,OAVW,gBAUX,oBAA6BH,GADN,EAGrBS,EAAqB,SAAC,GAAD,QAAGC,MAAAA,OAAH,MAAW,WAAX,MAAuBC,KAAAA,OAAvB,MAA8B,EAA9B,SAChCR,EAAU,GAAD,OAZQ,eAYR,oBAA0BH,EAA1B,kBAA2CU,EAA3C,YAAoDC,GAD7B,EAGrBC,EAAmB,SAAAC,GAAO,OACrCV,EAAU,GAAD,OAAIF,EAAJ,YAAoBY,EAApB,oBAAuCb,GADX,EAG1Bc,EAAgB,SAAAD,GAAO,OAClCV,EAAU,GAAD,OACJF,EADI,YACYY,EADZ,YAhBU,UAgBV,oBAC+Cb,IACtDK,MAAK,SAAAC,GAAC,OAAIA,EAAES,KAAKC,MAAM,EAAG,GAApB,GAH0B,EAKvBC,EAAmB,SAAAJ,GAAO,OACrCV,EAAU,GAAD,OACJF,EADI,YACYY,EADZ,YApBU,UAoBV,oBAC+Cb,IACtDK,MAAK,SAAAC,GAAC,OAAIA,EAAEY,QAAQF,MAAM,EAAG,GAAvB,GAH6B,C,qJCxB1BG,EAASC,EAAAA,GAAAA,OAAH,2pBAsCNC,EAAqBD,EAAAA,GAAAA,IAAH,uFAMlBE,EAAaF,EAAAA,GAAAA,GAAH,uFAMVG,EAAYH,EAAAA,GAAAA,KAAH,oEAKTI,EAAYJ,EAAAA,GAAAA,IAAH,wGAMTK,EAAmBL,EAAAA,GAAAA,EAAH,2FAMhBM,GAAkBN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,yIAQfQ,EAAaR,EAAAA,GAAAA,IAAH,gI,SCTvB,EAtDqB,WAAO,IAAD,IACnBS,GAASC,EAAAA,EAAAA,MACTjB,EAAUkB,SAASF,EAAOhB,SAChC,GAAgCmB,EAAAA,EAAAA,UAAS,CAAC,GAA1C,eAAOC,EAAP,KAAiBC,EAAjB,KAGMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,WAE7CC,EAAAA,EAAAA,YAAU,YACR3B,EAAAA,EAAAA,IAAiBC,GAASR,KAAK6B,EAChC,GAAE,CAACrB,IAEJ,IAAQ2B,EAAwDP,EAAxDO,MAAOC,EAAiDR,EAAjDQ,QAASC,EAAwCT,EAAxCS,YAAaC,EAA2BV,EAA3BU,SAAUC,EAAiBX,EAAjBW,aAI/C,OAFAC,SAASL,MAAT,oCAA8CA,IAG5C,UAACnB,EAAD,YACE,SAAC,KAAD,CAAMyB,GAAIX,EAAV,UACE,SAAChB,EAAD,wBAEDqB,GAASG,GACR,iCACE,UAACrB,EAAD,WACGkB,EADH,KACU,UAACjB,EAAD,eAAawB,OAAOH,GAAc5B,MAAM,EAAG,GAA3C,WAEV,UAACQ,EAAD,YACE,gBACEwB,MAAM,MACNC,OAAO,MACPC,IAAKT,EACLU,IAAG,6DAAwDT,MAE7D,SAACjB,EAAD,UAAmBkB,QAErB,UAACf,EAAD,YACE,SAACF,EAAD,CAAiBoB,GAAG,OAAOT,MAAO,CAAEC,KAAK,GAAD,OAAKH,IAA7C,mBAGA,SAACT,EAAD,CAAiBoB,GAAG,UAAUT,MAAO,CAAEC,KAAK,GAAD,OAAKH,IAAhD,yBAIF,SAAC,EAAAiB,SAAD,CAAUC,UAAU,sCAApB,UACE,SAAC,KAAD,UAIJ,wCAIP,C","sources":["api/fethcFilms.js","components/MovieDetails/movieDetails.styled.jsx","components/MovieDetails/movieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '964aa706dab4c3295b22f686e0c720cc';\nconst PATH_TRENDING = 'movie/popular';\nconst PATH_MOVIE = 'search/movie';\nconst PATH_DETAILS = 'movie';\nconst PATH_CREDITS = 'credits';\nconst PATH_REVIEWS = 'reviews';\n\naxios.defaults.baseURL = BASE_URL;\nconst fetchPath = path => axios.get(path).then(r => r.data);\n\nexport const fetchTrendingFilms = () =>\n  fetchPath(`${PATH_TRENDING}?api_key=${API_KEY}`);\n\nexport const fetchSearchedFilms = ({ query = 'trending', page = 1 }) =>\n  fetchPath(`${PATH_MOVIE}?api_key=${API_KEY}&query=${query}&${page}`);\n\nexport const fetchFilmDetails = movieId =>\n  fetchPath(`${PATH_DETAILS}/${movieId}?api_key=${API_KEY}`);\n\nexport const fetchFilmCast = movieId =>\n  fetchPath(\n    `${PATH_DETAILS}/${movieId}/${PATH_CREDITS}?api_key=${API_KEY}`\n  ).then(r => r.cast.slice(0, 10));\n\nexport const fetchFilmReviews = movieId =>\n  fetchPath(\n    `${PATH_DETAILS}/${movieId}/${PATH_REVIEWS}?api_key=${API_KEY}`\n  ).then(r => r.results.slice(0, 10));\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Button = styled.button`\n  display: inline-block;\n  border-radius: 4px;\n  background-color: #f4511e;\n  border: none;\n  color: #000;\n  text-align: center;\n  font-size: 24px;\n  padding: 14px;\n  font-weight: 600;\n  width: 200px;\n  transition: all 0.5s;\n  cursor: pointer;\n  margin: 3px;\n  & span {\n    cursor: pointer;\n    display: inline-block;\n    position: relative;\n    transition: 0.5s;\n  }\n  & span::after {\n    content: 'Â»';\n    position: absolute;\n    opacity: 0;\n    top: 0;\n    right: -20px;\n    transition: 0.5s;\n  }\n  &:hover span {\n    padding-right: 25px;\n  }\n\n  &:hover span::after {\n    opacity: 1;\n    right: 0;\n  }\n`;\n\nexport const MovieInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n`;\n\nexport const MovieTitle = styled.h1`\n  margin: 0 0 20px;\n  font-size: 36px;\n  font-weight: bold;\n`;\n\nexport const MovieYear = styled.span`\n  font-size: 32px;\n  font-weight: normal;\n`;\n\nexport const MovieMeta = styled.div`\n  display: flex;\n  padding: 10px 0 20px;\n  border-bottom: 1px solid #000000;\n`;\n\nexport const MovieDescription = styled.p`\n  margin: 0 0 0 10px;\n  font-size: 16px;\n  font-weight: normal;\n`;\n\nexport const DescriptionLink = styled(Link)`\n  margin: 10px 0 0;\n  font-size: 16px;\n  font-weight: bold;\n  text-decoration: underline;\n  color: #222244;\n`;\n\nexport const MovieLinks = styled.div`\n  display: flex;\n  padding: 0 0 20px;\n  flex-direction: column;\n  border-bottom: 1px solid #000000;\n`;\n","import { fetchFilmDetails } from 'api/fethcFilms';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport {\n  Button,\n  DescriptionLink,\n  MovieDescription,\n  MovieInfoContainer,\n  MovieLinks,\n  MovieMeta,\n  MovieTitle,\n  MovieYear,\n} from './movieDetails.styled';\n\nconst MovieDetails = () => {\n  const params = useParams();\n  const movieId = parseInt(params.movieId);\n  const [filmData, setFilmData] = useState({});\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    fetchFilmDetails(movieId).then(setFilmData);\n  }, [movieId]);\n\n  const { title, tagline, poster_path, overview, release_date } = filmData;\n\n  document.title = `React HW05 - Movie info - ${title}`;\n\n  return (\n    <MovieInfoContainer>\n      <Link to={backLinkHref}>\n        <Button>Go back</Button>\n      </Link>\n      {title && overview ? (\n        <>\n          <MovieTitle>\n            {title} <MovieYear>({String(release_date).slice(0, 4)})</MovieYear>\n          </MovieTitle>\n          <MovieMeta>\n            <img\n              width=\"300\"\n              height=\"450\"\n              alt={tagline}\n              src={`https://www.themoviedb.org/t/p/w300_and_h450_bestv2${poster_path}`}\n            />\n            <MovieDescription>{overview}</MovieDescription>\n          </MovieMeta>\n          <MovieLinks>\n            <DescriptionLink to=\"cast\" state={{ from: `${backLinkHref}` }}>\n              Cast\n            </DescriptionLink>\n            <DescriptionLink to=\"reviews\" state={{ from: `${backLinkHref}` }}>\n              Reviews\n            </DescriptionLink>\n          </MovieLinks>\n          <Suspense fallback={<p>Loading...</p>}>\n            <Outlet />\n          </Suspense>\n        </>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </MovieInfoContainer>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","PATH_DETAILS","axios","fetchPath","path","then","r","data","fetchTrendingFilms","fetchSearchedFilms","query","page","fetchFilmDetails","movieId","fetchFilmCast","cast","slice","fetchFilmReviews","results","Button","styled","MovieInfoContainer","MovieTitle","MovieYear","MovieMeta","MovieDescription","DescriptionLink","Link","MovieLinks","params","useParams","parseInt","useState","filmData","setFilmData","backLinkHref","useLocation","state","from","useEffect","title","tagline","poster_path","overview","release_date","document","to","String","width","height","alt","src","Suspense","fallback"],"sourceRoot":""}